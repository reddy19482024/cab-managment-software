{
  "openapi": "3.0.0",
  "info": {
    "title": "Employee Management API",
    "version": "1.0.0",
    "description": "API for managing employees in transport system"
  },
  "paths": {
    "/employees": {
      "get": {
        "summary": "List all employees",
        "tags": ["Employees"],
        "security": [{ "bearerAuth": [] }],
        "x-operation-type": "find",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Search by name, employeeId, or department"
          },
          {
            "in": "query",
            "name": "department",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": ["active", "inactive"]
            }
          },
          {
            "in": "query",
            "name": "routeId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of employees retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Employee"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": { "type": "integer" },
                        "pages": { "type": "integer" },
                        "page": { "type": "integer" },
                        "limit": { "type": "integer" }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": { "description": "Forbidden - Insufficient permissions" }
        }
      },
      "post": {
        "summary": "Create new employee",
        "tags": ["Employees"],
        "security": [{ "bearerAuth": [] }],
        "x-operation-type": "create",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Employee created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": { "description": "Forbidden - Insufficient permissions" }
        }
      }
    },
    "/employees/{id}": {
      "get": {
        "summary": "Get employee by ID",
        "tags": ["Employees"],
        "security": [{ "bearerAuth": [] }],
        "x-operation-type": "findById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "404": { "description": "Employee not found" }
        }
      },
      "put": {
        "summary": "Update employee",
        "tags": ["Employees"],
        "security": [{ "bearerAuth": [] }],
        "x-operation-type": "updateById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "404": { "description": "Employee not found" }
        }
      },
      "delete": {
        "summary": "Delete employee",
        "tags": ["Employees"],
        "security": [{ "bearerAuth": [] }],
        "x-operation-type": "deleteById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "Employee deleted successfully" },
          "404": { "description": "Employee not found" }
        }
      }
    },
    "/employees/{id}/route": {
      "put": {
        "summary": "Assign route to employee",
        "tags": ["Employees"],
        "security": [{ "bearerAuth": [] }],
        "x-operation-type": "custom",
        "x-custom-function": "assignRoute",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["routeId"],
                "properties": {
                  "routeId": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Route assigned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Employee": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "employeeId": { "type": "string" },
          "name": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "phone": { "type": "string" },
          "department": { "type": "string" },
          "role": { "type": "string", "enum": ["admin", "employee"] },
          "pickupAddress": {
            "type": "object",
            "properties": {
              "address": { "type": "string" },
              "landmark": { "type": "string" },
              "location": {
                "type": "object",
                "properties": {
                  "type": { "type": "string", "enum": ["Point"] },
                  "coordinates": {
                    "type": "array",
                    "items": { "type": "number" }
                  }
                }
              }
            }
          },
          "routeId": { "type": "string" },
          "status": { "type": "string", "enum": ["active", "inactive"] },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "EmployeeCreate": {
        "type": "object",
        "required": ["employeeId", "name", "email", "phone", "department", "password", "pickupAddress"],
        "properties": {
          "employeeId": { "type": "string" },
          "password": { "type": "string", "format": "password" },
          "name": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "phone": { "type": "string" },
          "department": { "type": "string" },
          "role": { "type": "string", "enum": ["admin", "employee"], "default": "employee" },
          "pickupAddress": {
            "type": "object",
            "required": ["address"],
            "properties": {
              "address": { "type": "string" },
              "landmark": { "type": "string" },
              "location": {
                "type": "object",
                "properties": {
                  "coordinates": {
                    "type": "array",
                    "items": { "type": "number" }
                  }
                }
              }
            }
          }
        }
      },
      "EmployeeUpdate": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "phone": { "type": "string" },
          "department": { "type": "string" },
          "pickupAddress": {
            "type": "object",
            "properties": {
              "address": { "type": "string" },
              "landmark": { "type": "string" },
              "location": {
                "type": "object",
                "properties": {
                  "coordinates": {
                    "type": "array",
                    "items": { "type": "number" }
                  }
                }
              }
            }
          },
          "status": { "type": "string", "enum": ["active", "inactive"] }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": { "type": "string" },
          "message": { "type": "string" }
        }
      }
    }
  }
}
